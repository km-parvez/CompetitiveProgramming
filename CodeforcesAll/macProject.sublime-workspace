{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"wha",
				"whatis3"
			],
			[
				"cout",
				"cout<<${1:}<<'${2:\\n}';"
			],
			[
				"em",
				"emplace(${1:});"
			],
			[
				"righ",
				"right"
			],
			[
				"zz",
				"zzcodestarter\tc++ starting without test case."
			],
			[
				"updat",
				"updateElement"
			],
			[
				"sor",
				"sort(${1:v}.begin(),${1:v}.end());"
			],
			[
				"prm",
				"prm2"
			],
			[
				"for",
				"for(int ${1:i}=${2:0}; ${1:i}<${3:n}; ${1:i}${4:++}) {$5}"
			],
			[
				"soe",
				"sort(${1:v}.begin(),${1:v}.end(),greater<${2:int}>());"
			],
			[
				"right",
				"rightSum"
			],
			[
				"left",
				"leftSum"
			],
			[
				"maxmi",
				"maximumOccurrence"
			],
			[
				"coutn",
				"cout<<${1:}<<'${2:\\n}';"
			],
			[
				"sum",
				"sumN"
			],
			[
				"modin",
				"modinverse"
			],
			[
				"fac",
				"factInit"
			],
			[
				"modi",
				"modInv"
			],
			[
				"moda",
				"modadd"
			],
			[
				"co",
				"cout<<'\\n';"
			],
			[
				"be",
				"begin()"
			],
			[
				"wh",
				"while"
			],
			[
				"vc",
				"vector<int> "
			],
			[
				"cou",
				"cout<<${1:}<<'${2:\\n}';"
			],
			[
				"en",
				"end()"
			],
			[
				"what",
				"whatis2"
			],
			[
				"emp",
				"emplace_back(${1:});"
			],
			[
				"go",
				"gor"
			],
			[
				"vector",
				"vector<int> "
			],
			[
				"map",
				"map<int,int> "
			],
			[
				"sort",
				"sort(${1:v}.begin(),${1:v}.end());"
			],
			[
				"pus",
				"push_back(${1:});"
			],
			[
				"so",
				"sort(${1:v}.begin(),${1:v}.end());"
			],
			[
				"ve",
				"vector<int> "
			],
			[
				"stdio",
				"cstdio\tstandard header"
			],
			[
				"whatArray",
				"whatisArray"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "// Created by KHALED MOSHARRAF PARVEZ\n#include <bits/stdc++.h>\n\n#define whatis1(x) cout<<#x<<\"=\"<<x<<'\\n'\n#define whatis2(x,y) cout<<#x<<\"=\"<<x<<\",\"<<#y<<\"=\"<<y<<'\\n'\n#define whatis3(x,y,z) cout<<#x<<\"=\"<<x<<\",\"<<#y<<\"=\"<<y<<\",\"<<#z<<\"=\"<<z<<'\\n'\n#define whatisArray(arr,n) cout<<#arr<<\", Size: \"<<n<<'\\n';for(int m=0;m<n;m++)  cout<<arr[m]<<\" \";cout<<'\\n';\n#define caseprint(caseno,ans) cout<<\"Case \"<<caseno<<\": \"<<ans<<'\\n'\n#define endl '\\n'\n#define all(v) v.begin(),v.end()\n#define mod 100000007\n#define MAXX 1000006\n\nusing namespace std;\nusing ll = long long;\nint n,k;\nint arr[44];\nint c[44];\nint dp[44];\nint used[44];\n\nvoid solve(int caseno){\n    // n is number of coin, k is what amount needs to make. \n    cin>>n>>k;\n    // arr[i] is coins available\n    for(int i=0;i<n;i++) {\n        cin>>arr[i];\n    }\n    // c[i] is number of coin can use;\n    for(int i=0;i<n;i++) {\n        c[i]=1+ (k/arr[i]) ;\n    }\n\n    memset(dp,0,sizeof(dp));\n    dp[0]=1;\n    int ans = 0;\n    vector< vector<int> > v[44];\n   \n    v[0].push_back(tmp);\n    \n    for(int j=0; j<n; j++) {\n        memset(used,0,sizeof(used));\n        for(int i=arr[j]; i<=k; i++) {\n            if(!dp[i]&& dp[i-arr[j]]&& c[j]>used[i-arr[j]]){\n                used[i]=used[i-arr[j]]+1;\n                dp[i]=1;\n                for(auto tmp:v[i-arr[j]]){\n                    tmp.push_back(arr[j]);\n                    v[i].push_back(tmp);\n                }\n                ans++;\n            }\n        }\n    }\n    return v[k];\n  \n    caseprint(caseno,ans);\n    return;\n    \n}\nint main()\n{\n    ios::sync_with_stdio(0);\n    cin.tie(0);\n    cout.tie(0);\n    int cases,caseno=0;\n    cin>>cases;\n    while(cases--){\n        solve(++caseno);\n    }\n    return 0;\n}",
			"file": "AA.cpp",
			"file_size": 1779,
			"file_write_time": 133841656316592172,
			"settings":
			{
				"buffer_size": 1718,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "/Users/phonefinity/My Codes/CompetitiveProgramming/DP/CoinChange/coinChaingeIII.cpp",
			"settings":
			{
				"buffer_size": 1450,
				"line_ending": "Unix"
			}
		},
		{
			"file": "inputf.in",
			"settings":
			{
				"buffer_size": 43,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "outputf.out",
			"settings":
			{
				"buffer_size": 10,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"pack",
				"PackageResourceViewer: Open Resource"
			],
			[
				"PackageR",
				"PackageResourceViewer: Open Resource"
			],
			[
				"Package",
				"Package Control: Install Package"
			],
			[
				"packageR",
				"Install Package Control"
			],
			[
				"packa",
				"Preferences: Browse Packages"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/phonefinity/My Codes/CompetitiveProgramming",
		"/Users/phonefinity/My Codes/CompetitiveProgramming/DP",
		"/Users/phonefinity/My Codes/CompetitiveProgramming/DP/CoinChange"
	],
	"file_history":
	[
		"/Users/phonefinity/My Codes/CompetitiveProgramming/SegmentTree/RangeSumQueryUpdate.cpp",
		"/Users/phonefinity/My Codes/CompetitiveProgramming/CodeforcesAll/ref.cpp",
		"/Users/phonefinity/Desktop/Second found Best:",
		"/Users/phonefinity/My Codes/CompetitiveProgramming/CodeforcesAll/untitledcsl",
		"/Users/phonefinity/Desktop/erp.txt",
		"/Users/phonefinity/Downloads/AAADeviceRecords (2).sql",
		"/Users/phonefinity/Downloads/DAILY_ATTENDANCE.sql",
		"/Users/phonefinity/My Codes/CompetitiveProgramming/CodeforcesAll/other.cpp",
		"/Users/phonefinity/Downloads/AAADeviceRecords (3).sql",
		"/Users/phonefinity/My Codes/CompetitiveProgramming/SegmentTree/__margeFunctionSegmentTree.cpp",
		"/Users/phonefinity/My Codes/CompetitiveProgramming/CodeforcesAll/AA.cpp",
		"/Users/phonefinity/My Codes/CompetitiveProgramming/DP/DiscoveringGold.cpp",
		"/Users/phonefinity/My Codes/CompetitiveProgramming/DP/Raceto1Again.cpp",
		"/Users/phonefinity/Downloads/csl/applications/humanres/src/org/ofbiz/humanres/report/leave/LeaveReportHelper.java",
		"/Users/phonefinity/Downloads/csl/applications/humanres/ofbiz-component.xml",
		"/Users/phonefinity/My Codes/CompetitiveProgramming/Math/Seive/Seive.cpp",
		"/Users/phonefinity/My Codes/CompetitiveProgramming/CodeforcesAll/outputf.out",
		"/Users/phonefinity/My Codes/CompetitiveProgramming/RandomNumberGenerator/randomNumberGenerator.cpp",
		"/Users/phonefinity/My Codes/CompetitiveProgramming/MOs_Algorithm/RangeModeQuery.cpp",
		"/Users/phonefinity/My Codes/CompetitiveProgramming/CodeforcesAll/AA",
		"/Users/phonefinity/Development/Backup/Download/htdcedu_res_old.sql",
		"/Users/phonefinity/Development/Backup/Download/htdcedu_res.sql",
		"/Users/phonefinity/Development/Backup/Download/htdcedu_htdc.sql",
		"/Users/phonefinity/My Codes/CompetitiveProgramming/Math/InverseMod/NcRmod.cpp",
		"/Users/phonefinity/My Codes/CompetitiveProgramming/Math/InverseMod/NcRmod",
		"/Users/phonefinity/Downloads/list.html",
		"/Users/phonefinity/My Codes/SpringBootProjects/spring-boot-best-practices-master/src/main/java/com/best/spring/service/CourseService.java",
		"/Users/phonefinity/My Codes/CompititiveProgramming/CodeforcesAll/inputf.in",
		"/Users/phonefinity/Desktop/codedelete/new.cpp",
		"/Users/phonefinity/Library/Application Support/Sublime Text 3/Packages/User/CP.sublime-build",
		"/Users/phonefinity/Library/Application Support/Sublime Text 3/Packages/C++/C++.sublime-settings",
		"/Users/phonefinity/Library/Application Support/Sublime Text 3/Packages/C++/C++ Single File.sublime-build",
		"/Users/phonefinity/Library/Application Support/Sublime Text 3/Packages/C++/C Single File.sublime-build",
		"/Users/phonefinity/Desktop/untitled"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"vector",
			"int",
			"COLLATE latin1_general_cs",
			"10020",
			"double",
			"int",
			"dp[trn][u]",
			"dp[k][v]",
			"int",
			"20",
			";\n",
			"marge",
			"processQueries",
			"] "
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"int",
			"ll",
			"dp[u][trn]",
			"dp[v][k]",
			"ll",
			"MXK"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "AA.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1718,
						"regions":
						{
						},
						"selection":
						[
							[
								1315,
								1315
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 412.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/Users/phonefinity/My Codes/CompetitiveProgramming/DP/CoinChange/coinChaingeIII.cpp",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1450,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								1450
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 2,
					"file": "inputf.in",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 43,
						"regions":
						{
						},
						"selection":
						[
							[
								7,
								7
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "outputf.out",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 38.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				2
			],
			[
				1,
				0,
				2,
				1
			],
			[
				1,
				1,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.774237105748,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 145.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.unsaved_changes":
	{
		"height": 102.0
	},
	"pinned_build_system": "Packages/User/CP.sublime-build",
	"project": "macProject.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 392.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 592.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				2
			],
			[
				1,
				0,
				2,
				1
			],
			[
				1,
				1,
				2,
				2
			]
		]
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 282.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
