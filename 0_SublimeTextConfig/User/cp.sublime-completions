{
    "scope": "source.c++",

    "completions":
    [
        "int adjX[] = {0,1,0,-1};int adjY[] = {-1,0,1,0};",
        "function<int(int, int)> dfs = [&](int par, int u){}",
        "clear();",
        "erase(${1:it},${2:it2});",
        "find(${1:10});",
        "back();",
        "begin()",
        "rbegin()",
        "__builtin_popcount(${1:})",
        "__builtin_popcountll(${1:})",
        "__builtin_ffs(${1:})",
        "__builtin_ffsll(${1:})",
        "__builtin_clz(${1:})",
        "__builtin_clzll(${1:})",
        "cin>>", 
        "cout<<${1:}<<'${2:\\n}';",
        "cout<<'\\n';",
        "cout<<\"YES\"<<'\\n';",
        "cout<<\"NO\"<<'\\n';",
        "cout.precision(8); cout<<fixed ",
        "deque<int> ",
        "end()",
        "rend()",
        "empty()",
        "emplace(${1:});",
        "emplace_back(${1:});",
        "for(int ${1:i}=${2:0}; ${1:i}<${3:n}; ${1:i}${4:++}) {$5}",
        "for(auto ${1:it} = ${2:st}.begin(); ${1:it} != ${2:st}.end(); ${1:it}++){$3}",
        "front()",
        "first",
        "INT_MAX",
        "INT_MIN",
        "iterator",
        "lower_bound(${1:v}.begin(), ${1:v}.end(), ${2:x});",
        "LLONG_MAX",
        "LLONG_MIN",
        "make_pair",
        "memset(${1:dp},${2:-1},sizeof(${1:dp}));",
        "make_tuple",
        "map<int,int> ",
        "bool operator < ( const ${1:data}& b ) const {${2:}}",
        "pair<int,int> ",
        "pair<${1:}> ",
        "push_back(${1:});",
        "pop();",
        "push(${1:});",
        "push_front(${1:});",
        "pop_back();",
        "pop_front();",
        "priority_queue<${1:int}>",
        "priority_queue<${1:int}, vector<${1:int}>, greater<${1:int}>>",
        "size()",
        "second",
        "set<int> ",
        "set<${1:}> ",
        "set<${1:int},greater<${1:int}> >",
        "sort(${1:arr},${1:arr}+${2:n});",
        "sort(${1:arr},${1:arr}+${2:n},greater<${3:int}>());",
        "sort(${1:v}.begin(),${1:v}.end());",
        "sort(${1:v}.begin(),${1:v}.end(),greater<${2:int}>());",
        "queue<int> ",
        "upper_bound(${1:v}.begin(), ${1:v}.end(), ${2:x});",
        "vector<int> ",
	"vector< vector<int> > ",
        "vector<${1:}> ",
	"accumulate(all(${1:}),0LL);",
	"reverse(all(${1:}));",
	"debug(${1:});",

    ]
}